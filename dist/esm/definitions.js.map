{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import { PluginListenerHandle } from \"@capacitor/core\";\r\n\r\nexport interface DataWedgeCommandResult {\r\n  result: string;\r\n  command: string;\r\n  info: string;\r\n  commandId: string;\r\n}\r\n\r\nexport interface DataWedgeScanResult {\r\n  scanData: string,\r\n  labelType: string,\r\n  source: string\r\n}\r\n\r\ntype DataWedgeEvents = {\r\n  ready: {}\r\n  action_result: DataWedgeCommandResult;\r\n  scan_result: DataWedgeScanResult;\r\n}\r\n\r\nexport interface DataWedgePlugin {\r\n  \r\n  addListener<E extends keyof DataWedgeEvents>(eventName: E, listenerFunc: (event: DataWedgeEvents[E]) => void): PluginListenerHandle;\r\n  removeAllListeners(): void;\r\n\r\n  createProfile(options: { name: string }): Promise<any>;\r\n  alert():void\r\n}"]}