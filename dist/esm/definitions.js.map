{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import { PluginListenerHandle } from \"@capacitor/core\";\n\nexport interface DataWedgeCommandResult {\n  result: string;\n  command: string;\n  info: string;\n  commandId: string;\n}\n\nexport interface DataWedgeScanResult {\n  scanData: string,\n  labelType: string,\n  source: string\n}\n\ntype DataWedgeEvents = {\n  ready: {}\n  action_result: DataWedgeCommandResult;\n  scan_result: DataWedgeScanResult;\n}\n\nexport interface DataWedgePlugin {\n  \n  addListener<E extends keyof DataWedgeEvents>(eventName: E, listenerFunc: (event: DataWedgeEvents[E]) => void): PluginListenerHandle;\n  removeAllListeners(): void;\n\n  createProfile(options: { name: string }): Promise<any>;\n  alert():void\n}"]}